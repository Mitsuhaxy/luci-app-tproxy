#!/bin/ash

#add_rule
function add_ipv4_rule() {
    if test -z "$(ip route list table 100 | grep 'local default dev lo scope host')"; then
        ip route add local default dev lo table 100
    fi
    if test -z "$(ip rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip rule add fwmark 254 table 100
    fi
}
function add_ipv6_rule() {
    if test -z "$(ip route list table 100 | grep 'local default dev lo scope host')"; then
        ip route add local default dev lo table 100
    fi
    if test -z "$(ip rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip rule add fwmark 254 table 100
    fi

    if test -z "$(ip -6 route list table 100 | grep 'local default dev lo metric 1024 pref medium')"; then
        ip -6 route add local default dev lo table 100
    fi
    if test -z "$(ip -6 rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip -6 rule add fwmark 254 table 100
    fi
}

#del_rule
function del_ipv4_rule() {
    if test -n "$(ip route list table 100 | grep 'local default dev lo scope host')"; then
        ip route del local default dev lo table 100
    fi
    if test -n "$(ip rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip rule del fwmark 254 table 100
    fi
}
function del_ipv6_rule() {
    if test -n "$(ip route list table 100 | grep 'local default dev lo scope host')"; then
        ip route del local default dev lo table 100
    fi
    if test -n "$(ip rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip rule del fwmark 254 table 100
    fi

    if test -n "$(ip -6 route list table 100 | grep 'local default dev lo metric 1024 pref medium')"; then
        ip -6 route del local default dev lo table 100
    fi
    if test -n "$(ip -6 rule | grep 'from all fwmark 0xfe lookup 100')"; then
        ip -6 rule del fwmark 254 table 100
    fi
}

#add_set
function add_ipv4_set() {
    if test -z "$(ipset --list | grep 'Name: lan4')"; then
        ipset create lan4 hash:net family inet hashsize 1024
        ipset add lan4 10.0.0.0/8
        ipset add lan4 100.64.0.0/10
        ipset add lan4 127.0.0.0/8
        ipset add lan4 169.254.0.0/16
        ipset add lan4 172.16.0.0/12
        ipset add lan4 192.168.0.0/16
        ipset add lan4 224.0.0.0/3
        ipset add lan4 255.255.255.255/32
    else
        ipset flush lan4
        ipset add lan4 10.0.0.0/8
        ipset add lan4 100.64.0.0/10
        ipset add lan4 127.0.0.0/8
        ipset add lan4 169.254.0.0/16
        ipset add lan4 172.16.0.0/12
        ipset add lan4 192.168.0.0/16
        ipset add lan4 224.0.0.0/3
        ipset add lan4 255.255.255.255/32
    fi

    while ! ping -c 1 119.29.29.29 >/dev/null; do sleep 1; done

    if test -z "$(ipset --list | grep 'Name: gateway4')"; then
        ipset create gateway4 hash:net family inet hashsize 1024
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    else
        ipset flush gateway4
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    fi
}
function add_ipv6_set() {
    if test -z "$(ipset --list | grep 'Name: lan4')"; then
        ipset create lan4 hash:net family inet hashsize 1024
        ipset add lan4 10.0.0.0/8
        ipset add lan4 100.64.0.0/10
        ipset add lan4 127.0.0.0/8
        ipset add lan4 169.254.0.0/16
        ipset add lan4 172.16.0.0/12
        ipset add lan4 192.168.0.0/16
        ipset add lan4 224.0.0.0/3
        ipset add lan4 255.255.255.255/32
    else
        ipset flush lan4
        ipset add lan4 10.0.0.0/8
        ipset add lan4 100.64.0.0/10
        ipset add lan4 127.0.0.0/8
        ipset add lan4 169.254.0.0/16
        ipset add lan4 172.16.0.0/12
        ipset add lan4 192.168.0.0/16
        ipset add lan4 224.0.0.0/3
        ipset add lan4 255.255.255.255/32
    fi

    while ! ping -c 1 119.29.29.29 >/dev/null; do sleep 1; done

    if test -z "$(ipset --list | grep 'Name: gateway4')"; then
        ipset create gateway4 hash:net family inet hashsize 1024
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    else
        ipset flush gateway4
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    fi

    if test -z "$(ipset --list | grep 'Name: lan6')"; then
        ipset create lan6 hash:net family inet6 hashsize 1024
        ipset add lan6 ::/128
        ipset add lan6 ::1/128
        ipset add lan6 ::ffff:0:0/96
        ipset add lan6 ::ffff:0:0:0/96
        ipset add lan6 64:ff9b::/96
        ipset add lan6 100::/64
        ipset add lan6 fc00::/7
        ipset add lan6 fe80::/10
        ipset add lan6 ff00::/8
    else
        ipset flush lan6
        ipset add lan6 ::/128
        ipset add lan6 ::1/128
        ipset add lan6 ::ffff:0:0/96
        ipset add lan6 ::ffff:0:0:0/96
        ipset add lan6 64:ff9b::/96
        ipset add lan6 100::/64
        ipset add lan6 fc00::/7
        ipset add lan6 fe80::/10
        ipset add lan6 ff00::/8
    fi

    while ! ping6 -c 1 2402:4e00:: >/dev/null; do sleep 1; done

    if test -z "$(ipset --list | grep 'Name: gateway6')"; then
        ipset create gateway6 hash:net family inet6 hashsize 1024
        ipset add gateway6 $(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.address')/$(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.mask')
    else
        ipset flush gateway6
        ipset add gateway6 $(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.address')/$(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.mask')
    fi
}

#reload_set
function reload_ipv4_set() {
    while ! ping -c 1 119.29.29.29 >/dev/null; do sleep 1; done

    if test -n "$(ipset --list | grep 'Name: gateway4')"; then
        ipset flush gateway4
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    fi
}
function reload_ipv6_set() {
    while ! ping -c 1 119.29.29.29 >/dev/null; do sleep 1; done

    if test -n "$(ipset --list | grep 'Name: gateway4')"; then
        ipset flush gateway4
        ipset add gateway4 $(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].address')/$(ifstatus wan | jsonfilter -e '@["ipv4-address"][0].mask')
    fi

    while ! ping6 -c 1 2402:4e00:: >/dev/null; do sleep 1; done

    if test -n "$(ipset --list | grep 'Name: gateway6')"; then
        ipset flush gateway6
        ipset add gateway6 $(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.address')/$(ifstatus wan_6 | jsonfilter -e '@["ipv6-prefix"][0].assigned.lan.mask')
    fi
}

#del_set
function del_ipv4_set() {
    if test -n "$(ipset --list | grep 'Name: lan4')"; then
        ipset destroy lan4
    fi

    if test -n "$(ipset --list | grep 'Name: gateway4')"; then
        ipset destroy gateway4
    fi
}
function del_ipv6_set() {
    if test -n "$(ipset --list | grep 'Name: lan4')"; then
        ipset destroy lan4
    fi

    if test -n "$(ipset --list | grep 'Name: gateway4')"; then
        ipset destroy gateway4
    fi

    if test -n "$(ipset --list | grep 'Name: lan6')"; then
        ipset destroy lan6
    fi

    if test -n "$(ipset --list | grep 'Name: gateway6')"; then
        ipset destroy gateway6
    fi
}

#enable_tproxy
function enable_ipv4_tproxy() {
    if test -z "$(iptables --list -t mangle | grep 'TPROXY')"; then
        iptables -t mangle -A PREROUTING -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A PREROUTING -m set --match-set gateway4 dst -j RETURN
        iptables -t mangle -A PREROUTING -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        iptables -t mangle -A PREROUTING -p udp -j TPROXY --on-ip 127.0.0.1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        iptables -t mangle -A OUTPUT -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m set --match-set gateway4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m mark --mark 0xff/0xffffffff -j RETURN
        iptables -t mangle -A OUTPUT -p tcp -j MARK --set-mark 0xfe/0xffffffff
        iptables -t mangle -A OUTPUT -p udp -j MARK --set-mark 0xfe/0xffffffff
    fi
}
function enable_ipv6_tproxy() {
    if test -z "$(iptables --list -t mangle | grep 'TPROXY')"; then
        iptables -t mangle -A PREROUTING -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A PREROUTING -m set --match-set gateway4 dst -j RETURN
        iptables -t mangle -A PREROUTING -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        iptables -t mangle -A PREROUTING -p udp -j TPROXY --on-ip 127.0.0.1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        iptables -t mangle -A OUTPUT -m set --match-set lan4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m set --match-set gateway4 dst -j RETURN
        iptables -t mangle -A OUTPUT -m mark --mark 0xff/0xffffffff -j RETURN
        iptables -t mangle -A OUTPUT -p tcp -j MARK --set-mark 0xfe/0xffffffff
        iptables -t mangle -A OUTPUT -p udp -j MARK --set-mark 0xfe/0xffffffff
    fi

    if test -z "$(ip6tables --list -t mangle | grep 'TPROXY')"; then
        ip6tables -t mangle -A PREROUTING -m set --match-set lan6 dst -j RETURN
        ip6tables -t mangle -A PREROUTING -m set --match-set gateway6 dst -j RETURN
        ip6tables -t mangle -A PREROUTING -p tcp -j TPROXY --on-ip ::1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        ip6tables -t mangle -A PREROUTING -p udp -j TPROXY --on-ip ::1 --on-port 1080 --tproxy-mark 0xfe/0xffffffff
        ip6tables -t mangle -A OUTPUT -m set --match-set lan6 dst -j RETURN
        ip6tables -t mangle -A OUTPUT -m set --match-set gateway6 dst -j RETURN
        ip6tables -t mangle -A OUTPUT -m mark --mark 0xff/0xffffffff -j RETURN
        ip6tables -t mangle -A OUTPUT -p tcp -j MARK --set-mark 0xfe/0xffffffff
        ip6tables -t mangle -A OUTPUT -p udp -j MARK --set-mark 0xfe/0xffffffff
    fi
}

#disable_tproxy
function disable_ipv4_tproxy() {
    /etc/init.d/firewall restart
}
function disable_ipv6_tproxy() {
    /etc/init.d/firewall restart
}

#start_service
function start_ipv4_service() {
    add_ipv4_rule
    add_ipv4_set
    enable_ipv4_tproxy
}
function start_ipv6_service() {
    add_ipv6_rule
    add_ipv6_set
    enable_ipv6_tproxy
}

#stop_service
function stop_ipv4_service() {
    disable_ipv4_tproxy
    del_ipv4_rule
    del_ipv4_set
}
function stop_ipv6_service() {
    disable_ipv6_tproxy
    del_ipv6_rule
    del_ipv6_set
}

#restart_service
function restart_ipv4_service() {
    disable_ipv4_tproxy
    del_ipv4_rule
    del_ipv4_set
    add_ipv4_rule
    add_ipv4_set
    enable_ipv4_tproxy
}
function restart_ipv6_service() {
    disable_ipv6_tproxy
    del_ipv6_rule
    del_ipv6_set
    add_ipv6_rule
    add_ipv6_set
    enable_ipv6_tproxy
}
